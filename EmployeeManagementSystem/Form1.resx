<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGQAAABkCAYAAABw4pVUAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DgAACw4BQL7hQQAABFFJREFUeF7tnTmra1UYhl9BULFRK3G4lSJibSNaO/Q2Fl6HRhBLxQlL/4OtlbMW
        FmJ7QVCvWqoIziKIOGshTnyQwPZhfWatb+/Ek+R94IFD8mbt5N05Ozsr6+RIxhhjzMnlEkn3SHpF0geS
        flkZP78s6W5JF/NGZnkukPSYpB8l/b3BHyQ9srqN2QKXSXqrUfwm35N0ioOZeVwu6YtG2b3GbWMMswBx
        yDnbKHnU+O06n4ObcR5vlFv1YQ5uxoizqXhxZrFVv/fZ1zzubZQ617u4EdNPvM9goXN9iRsx/XzUKHSu
        8ebRFPm5UehcY0xTZBs7JN7lmyIfNgqd6/vciOknJgpZ6Fxf5EZMPzFry0Lneic3YvqJN3FLvzG8iBsx
        YzzaKLbqgxzcjBMTgm83yh31TU8uLsfc6ffPV5+nmAWJQuNZzrI3+a4/oNoecciJKfR4cWbxNDIPSTqP
        g5jlibOvmLWNicJ4oxfv6MP4OS477bMpY4wx5v+ltSKRZ08n2Z9WE6LX8IHtGyMrEvfB7yRdyQe5L1wh
        6Z3Gg9p3n+MD3QdiZ3zZeDCH4N59MhmHqUP8zVgbHxtk3Cbpk8ZtRo0xbuXgVeI1gxs4JJ/lA56w5FEh
        Jl1nE2dTh/IC3vLb1eE4Y87MNV1kh8SpLQc+BONJFr8Z/7UzgjjMfNy4/agxxi0cvMI2ViSO+Kr/POHf
        bGN5z4ibnsFHxzYWwI1oAAvatQawoF1rAAuiN0q6qXH5UhrAgmhvrqoBLIj25qoawIJob66qASyI9uaq
        GsCCaG+uasZSs7C7crHZXg5Me3NVM2LJKbMn3Zg5ng0Hpb25qhneIYm9uaoZS83C7srFZns5MO3NVTWA
        BdHeXFUDWBDtzVU1gAXR3lxVA1gQ7c1VNYAF0d5cVQNYEO3NVTWABdHeXFUDWBDtzVU1gAXR3lxVA1gQ
        7c1VzTja2d6/GoNPXcPLM39fycszM5Zcc7srF1lK+llj4LXTVeO8LvNaSdc1Ls/MWHLN7a5cZIc81Rh4
        7fOTHK/LrObJ0c72xtdktJ6NsWr8qkmO12dW82ZCfP/I06u/x4vD1AuSrkaGRWZW82YQFplZzZtBWGRm
        NW8GYZGZ1bwZhEVmVvNmEBaZWc2bQVhkZjVvBmGRmdW8GYRFZlbzZhAWmVnNk6Od7e2FdyCzmidHu5S0
        F248s5on3iEb4MYzq3lytLO9vfAOZFbzZhAWmVnNm0FYZGY1bwZhkZnVvBmERWZW82YQFplZzZtBWGRm
        NW8GYZGZ1bwZhEVmVvNmEBaZWc2bQVhkyz9n5IlnezfQ8z8Mv57kv2pcT7+Z5MnRru3t5bXGHaDTLyx+
        pnE9fX2SJ63VlCfdne6Qmxt3YOofkq6f5O9rZOgdkzzxbG8HTzbuSBivBfcje6GkTxvZtbFc9RzcxhS4
        XdIbkn5bLciOL2K+gaEVl0p6QtKZVfZXSWclPSDpXIaNMcYYk/MPwFHUyXdoR2IAAAAASUVORK5CYII=
</value>
  </data>
</root>